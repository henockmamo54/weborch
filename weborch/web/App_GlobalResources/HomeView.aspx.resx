<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptTerms" xml:space="preserve">
    <value>Accept Terms</value>
  </data>
  <data name="AClassicalPerformanceArchives" xml:space="preserve">
    <value>A Classical Performance Archives</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AdminEmail" xml:space="preserve">
    <value>Admin Email</value>
  </data>
  <data name="AdminMobileNo" xml:space="preserve">
    <value>Admin Mobile No</value>
  </data>
  <data name="AdminName" xml:space="preserve">
    <value>Admin Name</value>
  </data>
  <data name="Affiliation" xml:space="preserve">
    <value>Affiliation</value>
  </data>
  <data name="Agent" xml:space="preserve">
    <value>Agent</value>
  </data>
  <data name="Alias" xml:space="preserve">
    <value>Alias</value>
  </data>
  <data name="AllClassicKorea" xml:space="preserve">
    <value>AllClassic Korea</value>
  </data>
  <data name="Artist" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="Artistdata" xml:space="preserve">
    <value>Artist data</value>
  </data>
  <data name="Artists" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="Audience" xml:space="preserve">
    <value>Audience</value>
  </data>
  <data name="Bio" xml:space="preserve">
    <value>Bio</value>
  </data>
  <data name="Birthday" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="Bulletin" xml:space="preserve">
    <value>Bulletin</value>
  </data>
  <data name="BussinessNo" xml:space="preserve">
    <value>Bussiness No</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CEOName" xml:space="preserve">
    <value>CEO Name</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="CompanyHomeUrl" xml:space="preserve">
    <value>Company Home Url</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="Composer" xml:space="preserve">
    <value>Composer</value>
  </data>
  <data name="ConcertHall" xml:space="preserve">
    <value>Concert Hall</value>
  </data>
  <data name="Conductor" xml:space="preserve">
    <value>Conductor</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Doyouacceptprivacypolicy" xml:space="preserve">
    <value>Do you accept privacy policy ?</value>
  </data>
  <data name="Doyouaccepttermsofuse" xml:space="preserve">
    <value>Do you accept terms of use ?</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>EndDate</value>
  </data>
  <data name="Explanation" xml:space="preserve">
    <value>Explanation</value>
  </data>
  <data name="FacebookAddr" xml:space="preserve">
    <value>Facebook Addr.</value>
  </data>
  <data name="FamilyName" xml:space="preserve">
    <value>Family Name</value>
  </data>
  <data name="FaxNo" xml:space="preserve">
    <value>Fax No.</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Forgotthepassword" xml:space="preserve">
    <value>Forgot the password?</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Individual" xml:space="preserve">
    <value>Individual</value>
  </data>
  <data name="Instrument" xml:space="preserve">
    <value>Instrument</value>
  </data>
  <data name="Instrumentdata" xml:space="preserve">
    <value>Instrument data</value>
  </data>
  <data name="Instruments" xml:space="preserve">
    <value>Instruments</value>
  </data>
  <data name="Introduction" xml:space="preserve">
    <value>Introduction</value>
  </data>
  <data name="KakaoTalkID" xml:space="preserve">
    <value>Kakao Talk ID:</value>
  </data>
  <data name="KoreanName" xml:space="preserve">
    <value>Korean Name</value>
  </data>
  <data name="label1" xml:space="preserve">
    <value>hi henock ENGLISH</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="MajorInstrument1" xml:space="preserve">
    <value>Major Instrument 1:</value>
  </data>
  <data name="MajorInstrument2" xml:space="preserve">
    <value>MajorInstrument 2:</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="MobileNo" xml:space="preserve">
    <value>Mobile No</value>
  </data>
  <data name="Msg" xml:space="preserve">
    <value>Msg</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Orchestra" xml:space="preserve">
    <value>Orchestra</value>
  </data>
  <data name="Orchestradata" xml:space="preserve">
    <value>Orchestra data</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="OtherInfo" xml:space="preserve">
    <value>Other Info</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Performance" xml:space="preserve">
    <value>Performance</value>
  </data>
  <data name="PerformanceTitle" xml:space="preserve">
    <value>Performance Title</value>
  </data>
  <data name="PersonalInfo" xml:space="preserve">
    <value>Personal Info</value>
  </data>
  <data name="PhoneNo" xml:space="preserve">
    <value>Phone No.</value>
  </data>
  <data name="Photo1" xml:space="preserve">
    <value>Photo1</value>
  </data>
  <data name="Photo2" xml:space="preserve">
    <value>Photo2</value>
  </data>
  <data name="PhotoAd" xml:space="preserve">
    <value>Photo Ad.</value>
  </data>
  <data name="PhotoAdLocation" xml:space="preserve">
    <value>Photo Ad Location</value>
  </data>
  <data name="PhotoLocation" xml:space="preserve">
    <value>Photo Location</value>
  </data>
  <data name="Playedby" xml:space="preserve">
    <value>Played by</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>Player</value>
  </data>
  <data name="PrivacyPolicy" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="ProfilePage" xml:space="preserve">
    <value>Profile Page</value>
  </data>
  <data name="Promoter" xml:space="preserve">
    <value>Promoter</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Read More</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Remarks" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="Rememberme" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Repertory" xml:space="preserve">
    <value>Repertory</value>
  </data>
  <data name="Reply" xml:space="preserve">
    <value>Reply</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Sex" xml:space="preserve">
    <value>Sex</value>
  </data>
  <data name="ShopOwner" xml:space="preserve">
    <value>Shop Owner</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="Since" xml:space="preserve">
    <value>Since</value>
  </data>
  <data name="SoundClipLocation" xml:space="preserve">
    <value>Sound Clip Location</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="Student" xml:space="preserve">
    <value>Student</value>
  </data>
  <data name="Teacher_Professor" xml:space="preserve">
    <value>Teacher/Professor</value>
  </data>
  <data name="TelNO" xml:space="preserve">
    <value>Tel No.</value>
  </data>
  <data name="Termsofuse" xml:space="preserve">
    <value>Terms of use</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TwitterAddr" xml:space="preserve">
    <value>Twitter Addr.</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="UserInfo" xml:space="preserve">
    <value>User Info.</value>
  </data>
  <data name="VideoAd" xml:space="preserve">
    <value>Video Ad.</value>
  </data>
  <data name="VideoClipLocation" xml:space="preserve">
    <value>Video Clip Location</value>
  </data>
  <data name="VideoLocation" xml:space="preserve">
    <value>Video Location</value>
  </data>
  <data name="WhatkindOfArtistAreyou" xml:space="preserve">
    <value>What kind Of Artist Are you?</value>
  </data>
  <data name="WhatkindOfUserAreyou" xml:space="preserve">
    <value>What kind Of User Are you?</value>
  </data>
  <data name="YourAffilation" xml:space="preserve">
    <value>Your Affilation</value>
  </data>
  <data name="ZipCode" xml:space="preserve">
    <value>ZipCode</value>
  </data>
  <data name="Endorser" xml:space="preserve">
    <value>Endorser</value>
  </data>
  <data name="MyPage" xml:space="preserve">
    <value>My Page</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>Notice</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Poster" xml:space="preserve">
    <value>Poster</value>
  </data>
</root>